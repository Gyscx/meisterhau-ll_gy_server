{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.player.crossbow": {
			"initial_state": "default",
			"states": {
				"charge": {
					"animations": ["third_person_crossbow_equipped"],
					"transitions": [
						{"default": "query.get_equipped_item_name != 'crossbow' || (query.item_remaining_use_duration <= 0.0 && !query.item_is_charged)"},
						{"hold": "query.item_is_charged"}
					]
				},
				"default": {
					"transitions": [
						{"hold": "query.item_is_charged"},
						{"charge": "query.item_remaining_use_duration > 0.0"}
					]
				},
				"hold": {
					"animations": ["crossbow_hold"],
					"transitions": [
						{"default": "query.get_equipped_item_name != 'crossbow' || (query.item_remaining_use_duration <= 0.0 && !query.item_is_charged)"},
						{"charge": "query.item_remaining_use_duration > 0.0"}
					]
				}
			}
		},
		"controller.animation.player.first_person_attack": {
			"initial_state": "default",
			"states": {
				"default": {
					"animations": ["first_person_attack_rotation"],
					"transitions": [
						{"vr_attack": "variable.is_using_vr"}
					]
				},
				"vr_attack": {
					"animations": ["first_person_vr_attack_rotation"],
					"transitions": [
						{"default": "!variable.is_using_vr"}
					]
				}
			}
		},
		"controller.animation.player.first_person_map": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{"one_hand": "query.get_equipped_item_name('off_hand') == 'filled_map' || query.get_equipped_item_name('off_hand') == 'shield'"},
						{"two_hand": "query.get_equipped_item_name('off_hand') != 'filled_map' && query.get_equipped_item_name('off_hand') != 'shield'"}
					]
				},
				"one_hand": {
					"animations": [
						{"first_person_map_hold_main_hand": "query.get_equipped_item_name(0, 1) == 'filled_map'"},
						{"first_person_map_hold_off_hand": "query.get_equipped_item_name('off_hand') == 'filled_map' && (query.get_equipped_item_name == 'bow' ? !(variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0) : 1.0)"}
					],
					"transitions": [
						{"default": "query.get_equipped_item_name(0, 1) != 'filled_map' && query.get_equipped_item_name('off_hand') != 'filled_map'"},
						{"two_hand": "query.get_equipped_item_name('off_hand') != 'filled_map' && query.get_equipped_item_name('off_hand') != 'shield'"}
					]
				},
				"two_hand": {
					"animations": ["first_person_map_hold", "first_person_map_hold_attack"],
					"transitions": [
						{"default": "query.get_equipped_item_name(0, 1) != 'filled_map' && query.get_equipped_item_name('off_hand') != 'filled_map'"},
						{"one_hand": "query.get_equipped_item_name('off_hand') == 'filled_map' || query.get_equipped_item_name('off_hand') == 'shield'"}
					]
				}
			}
		},
		"controller.animation.player.root": {
			"initial_state": "third_person",
			"states": {
				"first_person": {
					"animations": [
						{"first_person_swap_item": "!query.blocking"},
						{"first_person_shield_block": "query.blocking"},
						{"first_person_attack_controller": "variable.attack_time > 0.0f && query.get_equipped_item_name != 'filled_map'"},
						"first_person_base_pose",
						{"first_person_empty_hand": "query.get_equipped_item_name(0, 1) != 'filled_map'"},
						{"first_person_walk": "variable.bob_animation"},
						{"first_person_map_controller": "(query.get_equipped_item_name(0, 1) == 'filled_map' || query.get_equipped_item_name('off_hand') == 'filled_map')"},
						{"first_person_crossbow_equipped": "query.get_equipped_item_name == 'crossbow' && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"},
						{"first_person_breathing_bob": "variable.attack_time <= 0.0"}
					],
					"transitions": [
						{"paperdoll": "variable.is_paperdoll"},
						{"map_player": "variable.map_face_icon"},
						{"third_person": "!variable.is_first_person"}
					]
				},
				"map_player": {
					"transitions": [
						{"paperdoll": "variable.is_paperdoll"},
						{"first_person": "variable.is_first_person"},
						{"third_person": "!variable.map_face_icon && !variable.is_first_person"}
					]
				},
				"paperdoll": {
					"animations": ["humanoid_base_pose", "look_at_target_ui", "cape"],
					"transitions": [
						{"first_person": "!variable.is_paperdoll && variable.is_first_person"},
						{"map_player": "variable.map_face_icon"},
						{"third_person": "!variable.is_paperdoll && !variable.is_first_person"}
					]
				},
				"third_person": {
					"animations": [
						{"look_at_target": "!query.is_sleeping"},
						"body_fix",
						"controller.move",
						"cape"
					],
					"transitions": [
						{"paperdoll": "variable.is_paperdoll"},
						{"first_person": "variable.is_first_person"},
						{"map_player": "variable.map_face_icon"}
					]
				}
			}
		},
		"controller.animation.player.move": {
			"initial_state": "idle",
			"states": {
				"idle": {
					"animations": [
						{"pr.stand": "v.posture == 1"},
						{"custom.stand": "v.posture == 0"},
						{"pl.stand": "v.posture == 2"}
					],
					"transitions": [
						{"walk": "q.modified_move_speed > 0.1"},
						{"jump": "q.is_jumping"},
						{"falling": "!q.is_on_ground"}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				},
				"walk": {
					"animations": [
						{"custom.walk": "v.posture == 0"},
						{"pr.walk_front": "v.posture == 1"},
						{"pl.walk_front": "v.posture == 2"}
					],
					"transitions": [
						{"idle": "q.modified_move_speed < 0.1"},
						{"running": "q.is_sprinting"},
						{"jump": "q.is_jumping"},
						{"falling": "!q.is_on_ground"}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				},
				"running": {
					"animations": [
						{"holding": "q.is_on_ground"}
					],
					"transitions": [
						{"walk": "!q.is_sprinting"},
						{"jump": "q.is_jumping"},
						{"falling": "!q.is_on_ground"}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				},
				"jump": {
					"animations": [
						{"custom.jump": "!q.is_gliding"}
					],
					"transitions": [
						{"running": "q.is_on_ground && q.ground_speed >= 0.5 && q.is_sprinting"},
						{"falling": "q.vertical_speed < -8"},
						{"walk": "q.is_on_ground &&  !q.is_sprinting"}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				},
				"falling": {
					"animations": ["custom.fall"],
					"transitions": [
						{"running": "q.is_on_ground &&  q.is_sprinting"},
						{"walk": "q.is_on_ground  && !q.is_sprinting"}
					],
					"blend_transition": 0.2,
					"blend_via_shortest_path": true
				}
			}
		}
	}
}